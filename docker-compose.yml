version: "3.8"

services:
  redis:
    image: redis:7-alpine
    container_name: fullstack-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: fullstack-app-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fullstack-backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FRONTEND_URL=http://localhost
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4000"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: fullstack-app-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fullstack-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost/api
    depends_on:
      - backend
    networks:
      - fullstack-network

  nginx:
    image: fullstack-app-nginx:latest
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: fullstack-nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - fullstack-network
    volumes:
      - nginx_cache:/var/cache/nginx

networks:
  fullstack-network:
    driver: bridge

volumes:
  redis_data:
  nginx_cache:
